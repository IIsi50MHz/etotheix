<?xml version="1.0"?>
<!--TODO:
	* make structure stylesheet language a true superset of XSLT
	* handle s:use's when used docs have s:use's too
	* think about other things that are confusing or painful in XSLT and make them better. (grouping?)
	done * add ability to use stuff like css(.ding.ding) in match and select
	done * get rid of class('ding')
	* make it so we can have local named strucs????
	* make it so we can pass params to strucs when using in rules???? (not sure if we can do this)
	no * class('one two three')	
	no * make it so s:rule and s:inline-struc take <s:struc> wrapper optionally (currently it's required for s:rule and can't be used with s:inline-struc)
		no * or just make s:struc required for s:inline-struc
		no * change @name for s:inline-struc to @struc to make it consistant with s:rule?
		no * ... and change s:inline-struc to just s:inline. <s:inline struc="ding"/>
		* or just get rid of s:struc wapper for s:rule too.
-->
<s:structure-stylesheet xmlns:s="structure-stylesheet">
	<!--<s:use href="sss_ex_use.xml"/>-->
	
	<s:struc name="one">		
		<s:inline-struc name="two" select="."/>
	</s:struc>
	
	<s:struc name="two">
		<s:this style="color:green;">
			<s:apply-rules/>				
		</s:this>
	</s:struc>
	
	<s:struc name="three">		
		<s:this style="color:blue;">
			<s:apply-rules>
				<s:sort order="descending"/>
			</s:apply-rules>
		</s:this>
	</s:struc>
	
	<s:struc name="four">		
		<s:this style="color:orange; font-style:italic;">
			<s:remove-attr name="class"/>
			<s:remove-attr name="fourMore"/>
			<s:apply-rules/>
		</s:this>
	</s:struc>
	
	<s:struc name="five">		
		<s:this>
			<s:tag name="ol"/>
			<li><s:text>FIVE!</s:text></li>
			<s:inline-struc select="li">
				<s:sort order="descending"/>
				<li>
					<s:apply-rules/>				
				</li>
			</s:inline-struc>
		</s:this>
	</s:struc>
	
	<s:struc name="body">		
		<s:this>						
			<s:apply-rules>
				<s:sort order="descending"/>
			</s:apply-rules>
		</s:this>
	</s:struc>	
	
	<s:struc name="text">		
		<span style="color:magenta;"><s:this ding="dongxxx"/></span>
	</s:struc>

	<s:rule match="css(div#table.abc.xxx[type='text'])" struc="one"/>
	<s:rule match="ding[css(#two) or css(#three)][@blam]" struc="two"/>
	<s:rule match="css(.three)" struc="three"/>
	<s:rule match="css(.four)" struc="four"/>
	<s:rule match="css(.five)">	
		<s:struc>
			<s:this>
				<s:inline-struc name="one">
					<s:sort order="descending"/>													
				</s:inline-struc>					
			</s:this>
		</s:struc>
	</s:rule>
	<s:rule match="body" struc="body"/>
	<s:rule match="li/text()[. = 'c' or . = 'a']" struc="text"/>
	
</s:structure-stylesheet>